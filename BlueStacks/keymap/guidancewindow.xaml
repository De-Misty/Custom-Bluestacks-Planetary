<Common:CustomWindow
	x:Class="BlueStacks.BlueStacksUI.GuidanceWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:BlueStacks.BlueStacksUI"
	xmlns:Common="clr-namespace:BlueStacks.Common;assembly=HD-Common"
	ShowInTaskbar="False"
	WindowStyle="None"
	ResizeMode="NoResize"
	AllowsTransparency="True"
	Title="Guidance Window"
	Background="#00FFFFFF"
	MinWidth="280"
	MaxWidth="280"
	MinHeight="190"
	DataContext="{Binding Source='{x:Static Common:BlueStacksUIBinding.Instance}'}"
	StateChanged="CustomWindow_StateChanged"
	Closing="GuidanceWindow_Closing"
	Closed="GuidanceWindow_Closed"
	Loaded="GuidanceWindow_Loaded"
	KeyDown="GuidanceWindow_KeyDown"
	IsVisibleChanged="GuidanceWindow_IsVisibleChanged"
	Activated="GuidanceWindow_Activated"
	Deactivated="GuidanceWindow_Deactivated">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary
					Source="pack://application:,,,/HD-Common;component/UIElements/CustomBorderStyle.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Common:TextInputValidityToVisibilityConverter
				x:Key="textInputValidityToVisibilityConverter" />
			<local:GuidanceDataTemplateSelector
				x:Key="guidanceDataTemplateSelector" />
			<Style
				x:Key="CenteredHorizontalOffsetStyle"
				TargetType="{x:Type Popup}">
				<Setter
					Property="Popup.HorizontalOffset">
					<Setter.Value>
						<MultiBinding
							Converter="{Common:CenterToolTipConverter}">
							<Binding
								Path="PlacementTarget.ActualWidth"
								RelativeSource="{RelativeSource Self}" />
							<Binding
								Path="Child.ActualWidth"
								RelativeSource="{RelativeSource Self}" />
						</MultiBinding>
					</Setter.Value>
				</Setter>
				<Setter
					Property="Popup.VerticalOffset">
					<Setter.Value>
						<MultiBinding
							Converter="{Common:CenterToolTipConverter}">
							<Binding
								Path="PlacementTarget.ActualHeight"
								RelativeSource="{RelativeSource Self}" />
							<Binding
								Path="Child.ActualHeight"
								RelativeSource="{RelativeSource Self}" />
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				x:Key="IMapToolTipTInfoemplate"
				TargetType="{x:Type ToolTip}">
				<TextBlock
					TextWrapping="WrapWithOverflow"
					FontWeight="Normal"
					Text="{Binding Text}" />
			</ControlTemplate>
			<Common:ListToStringConverter
				x:Key="listToStringConverter" />
			<local:GuidanceListToStringConverter
				x:Key="guidanceListToStringConverter" />
			<Style
				x:Key="TextBlockStyle"
				TargetType="{x:Type TextBlock}">
				<Setter
					Property="Foreground"
					Value="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}" />
				<Setter
					Property="VerticalAlignment"
					Value="Center" />
				<Setter
					Property="TextWrapping"
					Value="Wrap" />
				<Setter
					Property="FontSize"
					Value="12" />
				<Setter
					Property="TextBlock.Padding"
					Value="0,4,0,4" />
			</Style>
			<Style
				x:Key="ListItemTextStyle"
				TargetType="{x:Type TextBlock}"
				BasedOn="{StaticResource TextBlockStyle}">
				<Setter
					Property="Foreground"
					Value="{Binding Path=ColorModel.[SettingsWindowForegroundDimColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}" />
			</Style>
			<Style
				x:Key="ListCategoryTextStyle"
				TargetType="{x:Type TextBlock}"
				BasedOn="{StaticResource TextBlockStyle}">
				<Setter
					Property="MinHeight"
					Value="25" />
				<Setter
					Property="FontWeight"
					Value="Bold" />
				<Setter
					Property="TextBlock.Padding"
					Value="5,3,5,3" />
				<Setter
					Property="Margin"
					Value="0" />
				<Setter
					Property="Background"
					Value="{Binding Path=ColorModel.[HorizontalSeparator], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}" />
			</Style>
			<Style
				x:Key="{x:Type ListBox}"
				TargetType="{x:Type ListBox}">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Padding"
					Value="0" />
				<Setter
					Property="Margin"
					Value="0" />
				<Setter
					Property="BorderThickness"
					Value="0" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="ScrollViewer.HorizontalScrollBarVisibility"
					Value="Disabled" />
				<Setter
					Property="ScrollViewer.CanContentScroll"
					Value="False" />
			</Style>
			<ControlTemplate
				x:Key="ItemPresenterTemplate"
				TargetType="{x:Type ListBox}">
				<ItemsPresenter />
			</ControlTemplate>
			<Style
				x:Key="{x:Type ListBoxItem}"
				TargetType="{x:Type ListBoxItem}">
				<Setter
					Property="HorizontalContentAlignment"
					Value="Stretch" />
				<Setter
					Property="Padding"
					Value="0" />
				<Setter
					Property="Margin"
					Value="0" />
				<Setter
					Property="BorderThickness"
					Value="0" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ListBoxItem}">
							<Border
								x:Name="Bd"
								BorderBrush="{TemplateBinding Control.BorderBrush}"
								BorderThickness="{TemplateBinding Control.BorderThickness}"
								Background="{TemplateBinding Control.Background}"
								Padding="{TemplateBinding Control.Padding}"
								SnapsToDevicePixels="True">
								<ContentPresenter
									HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="ItemsControl.AlternationIndex"
						Value="0">
						<Setter
							Property="Background"
							Value="{Binding Path=ColorModel.[LightBandingColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}" />
					</Trigger>
					<Trigger
						Property="ItemsControl.AlternationIndex"
						Value="1">
						<Setter
							Property="Background"
							Value="{Binding Path=ColorModel.[DarkBandingColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<DataTemplate
				x:Key="GuidanceViewModelTemplate"
				DataType="{x:Type local:GuidanceViewModel}">
				<Grid
					MinHeight="30"
					Margin="5,0,5,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="145" />
						<ColumnDefinition
							Width="*"
							MinWidth="10" />
						<ColumnDefinition
							Width="80" />
					</Grid.ColumnDefinitions>
					<TextBlock
						Grid.Column="0"
						Style="{StaticResource ListItemTextStyle}"
						Text="{Binding GuidanceTexts, Converter={StaticResource listToStringConverter}}" />
					<TextBlock
						Grid.Column="2"
						Style="{StaticResource TextBlockStyle}"
						Text="{Binding GuidanceKeys, Converter={StaticResource guidanceListToStringConverter}}" />
				</Grid>
			</DataTemplate>
			<DataTemplate
				x:Key="GuidanceEditTextModelTemplate"
				DataType="{x:Type local:GuidanceEditTextModel}">
				<Grid
					MinHeight="30"
					Margin="5,0,5,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="145" />
						<ColumnDefinition
							Width="*"
							MinWidth="10" />
						<ColumnDefinition
							Width="80" />
					</Grid.ColumnDefinitions>
					<TextBlock
						Grid.Column="0"
						Style="{StaticResource ListItemTextStyle}"
						Text="{Binding GuidanceText}" />
					<local:IMapTextBox
						x:Name="imapText"
						TextChanged="GuidanceKeyTextChanged"
						TextWrapping="Wrap"
						SelectAllOnStart="False"
						Grid.Column="2"
						VerticalAlignment="Center"
						ToolTipService.InitialShowDelay="0"
						FontSize="12"
						Padding="1"
						Tag="{Binding GuidanceKey, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
						PropertyType="{Binding PropertyType}"
						IsEnabled="{Binding IsEnabled}"
						ActionType="{Binding ActionType}"
						IMActionItems="{Binding IMActionItems}"
						InputTextValidity="{Binding TextValidityOption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
						<FrameworkElement.ToolTip>
							<ToolTip
								HasDropShadow="True"
								HorizontalOffset="-30"
								BorderThickness="0"
								Background="#00FFFFFF"
								Placement="Top"
								Style="{x:Null}"
								Visibility="{Binding TextValidityOption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource textInputValidityToVisibilityConverter}}">
								<StackPanel
									DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ToolTip}}}">
									<Border
										MaxWidth="135"
										Style="{StaticResource ShadowBorderForPopup}"
										Visibility="{Binding InputTextValidity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ConverterParameter='{x:Static Common:TextValidityOptions.Warning}', Converter={StaticResource textInputValidityToVisibilityConverter}}">
										<StackPanel>
											<Border
												Style="{StaticResource OuterBorder}"
												BorderBrush="{Binding Path=ColorModel.[TextBoxWarningBorderColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}">
												<TextBlock
													Padding="5"
													TextWrapping="WrapWithOverflow"
													FontWeight="Normal"
													Foreground="{Binding Path=ColorModel.[TextBoxFocussedForegroundColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}"
													Background="{Binding Path=ColorModel.[TextBoxFocussedBackgroundColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}"
													Text="{Binding Path=LocaleModel.[STRING_DUPLICATE_KEY_WARNING], FallbackValue='This key is already assigned to a different action but you may now use it for both.'}" />
											</Border>
											<Path
												Grid.Row="1"
												Data="M0,0 L8,10 L16,0"
												Margin="0,-1,0,0"
												HorizontalAlignment="Center"
												Stroke="{Binding Path=ColorModel.[TextBoxWarningBorderColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}"
												Fill="{Binding Path=ColorModel.[ContextMenuItemBackgroundColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}" />
										</StackPanel>
									</Border>
									<Border
										Style="{StaticResource ShadowBorderForPopup}"
										Visibility="{Binding InputTextValidity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ConverterParameter='{x:Static Common:TextValidityOptions.Info}', Converter={StaticResource textInputValidityToVisibilityConverter}}">
										<Border
											Style="{StaticResource OuterBorder}">
											<TextBlock
												Margin="5,2.5,5,2.5"
												Text="{Binding Text}"
												Foreground="{Binding Path=ColorModel.[TextBoxFocussedForegroundColor], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}" />
										</Border>
									</Border>
								</StackPanel>
							</ToolTip>
						</FrameworkElement.ToolTip>
					</local:IMapTextBox>
				</Grid>
			</DataTemplate>
			<DataTemplate
				x:Key="GuidanceEditDecimalModelTemplate"
				DataType="{x:Type local:GuidanceEditDecimalModel}">
				<Grid
					MinHeight="30"
					Margin="5,0,5,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="145" />
						<ColumnDefinition
							Width="*"
							MinWidth="10" />
						<ColumnDefinition
							Width="80" />
					</Grid.ColumnDefinitions>
					<TextBlock
						Padding="0,4,0,4"
						Grid.Column="0"
						Style="{StaticResource ListItemTextStyle}"
						Text="{Binding GuidanceText}" />
					<local:StepperTextBox
						TextChanged="StepperTextChanged"
						SelectAllOnStart="False"
						Grid.Column="2"
						VerticalAlignment="Center"
						FontSize="12"
						Padding="1"
						MinValue="0.00"
						MaxValue="10.00"
						Text="{Binding GuidanceKey, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
						PropertyType="{Binding PropertyType}"
						IMActionItems="{Binding IMActionItems}" />
				</Grid>
			</DataTemplate>
			<DataTemplate
				x:Key="GuidanceCategoryViewModelTemplate"
				DataType="{x:Type local:GuidanceCategoryViewModel}">
				<Border
					BorderThickness="1,0,1,1"
					Margin="0,7.5,0,0"
					BorderBrush="{Binding Path=ColorModel.[HorizontalSeparator], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}">
					<StackPanel>
						<TextBlock
							Grid.Column="0"
							Style="{StaticResource ListCategoryTextStyle}"
							Text="{Binding Category}" />
						<ListBox
							AlternationCount="2"
							Template="{StaticResource ItemPresenterTemplate}"
							ItemTemplate="{StaticResource GuidanceViewModelTemplate}"
							ItemsSource="{Binding GuidanceViewModels}" />
					</StackPanel>
				</Border>
			</DataTemplate>
			<DataTemplate
				x:Key="GuidanceCategoryEditModelTemplate"
				DataType="{x:Type local:GuidanceCategoryEditModel}">
				<Border
					BorderThickness="1,0,1,1"
					Margin="0,7.5,0,0"
					BorderBrush="{Binding Path=ColorModel.[HorizontalSeparator], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}">
					<StackPanel>
						<TextBlock
							Grid.Column="0"
							TextWrapping="WrapWithOverflow"
							Style="{StaticResource ListCategoryTextStyle}"
							Text="{Binding Category}" />
						<ListBox
							AlternationCount="2"
							Template="{StaticResource ItemPresenterTemplate}"
							ItemTemplateSelector="{StaticResource guidanceDataTemplateSelector}"
							ItemsSource="{Binding GuidanceEditModels}" />
					</StackPanel>
				</Border>
			</DataTemplate>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Grid
		x:Name="mGuidanceMainGrid">
		<Border
			x:Name="mGameControlBorder"
			BorderThickness="1"
			BorderBrush="{Binding Path=ColorModel.[PopupBorderBrush]}"
			Background="{Binding Path=ColorModel.[SettingsWindowBackground]}">
			<Grid
				Margin="7.5,0,7.5,7.5">
				<Grid.RowDefinitions>
					<RowDefinition
						Height="40" />
					<RowDefinition
						Height="1" />
					<RowDefinition
						Height="*" />
				</Grid.RowDefinitions>
				<DockPanel
					x:Name="mHeaderGrid"
					LastChildFill="True"
					Grid.Row="0"
					Background="#00FFFFFF"
					MouseLeftButtonDown="Grid_MouseLeftButtonDown">
					<Grid
						x:Name="mControlsTab"
						DockPanel.Dock="Left"
						Background="#00FFFFFF"
						MouseLeftButtonUp="ControlsTabMouseLeftButtonUp">
						<TextBlock
							x:Name="mControlsTabTextBlock"
							FontSize="14"
							Padding="2,0,16,0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Text="{Binding Path=LocaleModel.[STRING_CONTROLS], FallbackValue=Controls}"
							Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}" />
					</Grid>
					<Grid
						x:Name="mEditKeysGrid"
						DockPanel.Dock="Left"
						Background="#00FFFFFF"
						Visibility="Visible">
						<TextBlock
							x:Name="mEditKeysGridTextBlock"
							FontSize="14"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Text="{Binding Path=LocaleModel.[STRING_GUIDANCE_EDIT_KEYS], FallbackValue='Edit keys'}"
							Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}" />
					</Grid>
					<Grid
						DockPanel.Dock="Right">
						<Common:CustomPictureBox
							x:Name="mCloseSideBarWindow"
							Grid.Column="2"
							Margin="0,0,2,0"
							ImageName="close"
							HorizontalAlignment="Right"
							Height="16"
							Width="16"
							VerticalAlignment="Center"
							ToolTip="{Binding Path=LocaleModel.[STRING_CLOSE]}"
							MouseDown="CustomPictureBox_MouseDown"
							MouseLeftButtonUp="CloseButton_MouseLeftButtonUp" />
					</Grid>
				</DockPanel>
				<Grid
					Row="1"
					VerticalAlignment="Bottom"
					Height="1"
					Opacity="0.6"
					Margin="0,0,0,0"
					Background="{Binding Path=ColorModel.[HorizontalSeparator]}" />
				<Grid
					x:Name="mControlsGrid"
					Row="2"
					Margin="0,7.5,0,0">
					<Grid.RowDefinitions>
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="36" />
						<RowDefinition
							Height="*" />
						<RowDefinition
							Height="Auto" />
					</Grid.RowDefinitions>
					<StackPanel
						x:Name="mSchemePanel">
						<TextBlock
							x:Name="mSchemeTextBlock"
							Margin="0,0,0,7.5"
							Text="{Binding Path=LocaleModel.[STRING_SCHEME], FallbackValue=Scheme}"
							Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}" />
						<Common:CustomComboBox
							x:Name="mSchemesComboBox"
							Grid.Row="1"
							SelectedValuePath="Content"
							Height="26"
							FontSize="14"
							Margin="0,0,0,7.5"
							HorizontalAlignment="Stretch"
							MaxDropDownHeight="200"
							SelectionChanged="ProfileComboBox_ProfileChanged" />
					</StackPanel>
					<Border
						x:Name="mVideoBorder"
						Grid.Row="1"
						Margin="0,0,0,7.5"
						Visibility="Collapsed"
						BorderThickness="0"
						BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}">
						<Grid
							Height="150"
							MouseUp="CustomPictureBox_MouseUp">
							<Common:CustomPictureBox
								x:Name="mVideoThumbnail"
								Stretch="Fill" />
							<TextBlock
								TextTrimming="CharacterEllipsis"
								VerticalAlignment="Bottom"
								FontSize="14"
								FontWeight="SemiBold"
								Padding="12,8,80,8"
								ToolTipService.ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}"
								Text="{Binding Path=LocaleModel.[STRING_HOW_TO_PLAY_ON_BLUESTACKS], FallbackValue='How to play on Bluestacks'}"
								Foreground="{Binding Path=ColorModel.[SettingsWindowTitleBarForeGround]}"
								Background="{Binding Path=ColorModel.[GuidanceVideoDescriptionColor]}" />
							<Common:CustomPictureBox
								Margin="0,0,20,20"
								VerticalAlignment="Bottom"
								HorizontalAlignment="Right"
								Height="50"
								Width="50"
								ImageName="playvideo_icon" />
						</Grid>
					</Border>
					<Border
						x:Name="mHowToPlayGrid"
						Visibility="Collapsed"
						Grid.Row="1"
						BorderThickness="0,1,0,1"
						BorderBrush="{Binding Path=ColorModel.[HorizontalSeparator], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}">
						<StackPanel
							Orientation="Vertical">
							<Grid
								Margin="0,8,0,8"
								Background="#00FFFFFF"
								MouseUp="HowToPlay_MouseUp">
								<TextBlock
									TextTrimming="CharacterEllipsis"
									VerticalAlignment="Center"
									HorizontalAlignment="Left"
									FontSize="14"
									FontWeight="SemiBold"
									ToolTipService.ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}"
									Text="{Binding Path=LocaleModel.[STRING_HOW_TO_PLAY], FallbackValue='HOW TO PLAY'}"
									Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}" />
								<Common:CustomPictureBox
									x:Name="mHowToPlayCollapseExpand"
									Height="16"
									Width="16"
									Margin="12,0,0,0"
									HorizontalAlignment="Right"
									VerticalAlignment="Center"
									ImageName="outline_settings_collapse" />
							</Grid>
							<Border
								x:Name="mQuickLearnBorder"
								Visibility="Collapsed"
								Margin="0,0,0,8"
								BorderThickness="0"
								Height="40"
								BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}"
								Background="{Binding Path=ColorModel.[GuidanceVideoDescriptionColor]}"
								MouseUp="QuickLearnBorder_MouseUp">
								<StackPanel
									Margin="12,8,12,8"
									Orientation="Horizontal">
									<Common:CustomPictureBox
										Margin="0,0,12,0"
										Height="24"
										Width="24"
										ImageName="guidance_quicklearn" />
									<TextBlock
										TextTrimming="CharacterEllipsis"
										VerticalAlignment="Center"
										FontSize="14"
										ToolTipService.ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}"
										Text="{Binding Path=LocaleModel.[STRING_QUICKLY_LEARN], FallbackValue='Quickly learn'}"
										Foreground="{Binding Path=ColorModel.[SettingsWindowTitleBarForeGround]}" />
								</StackPanel>
							</Border>
							<Border
								x:Name="mVideoTutorialBorder"
								Margin="0,0,0,8"
								Visibility="Collapsed"
								BorderThickness="0"
								Height="40"
								BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}"
								Background="{Binding Path=ColorModel.[HorizontalSeparator]}"
								MouseUp="CustomPictureBox_MouseUp">
								<StackPanel
									Margin="12,8,12,8"
									Orientation="Horizontal">
									<Common:CustomPictureBox
										Margin="0,0,12,0"
										Height="24"
										Width="24"
										ImageName="guidance_watchvideo" />
									<TextBlock
										TextTrimming="CharacterEllipsis"
										VerticalAlignment="Center"
										FontSize="14"
										ToolTipService.ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}"
										Text="{Binding Path=LocaleModel.[STRING_WATCH_TUTORIAL_VIDEO], FallbackValue='Watch tutorial video'}"
										Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}" />
								</StackPanel>
							</Border>
							<Border
								x:Name="mReadArticleBorder"
								Visibility="Collapsed"
								Margin="0,0,0,8"
								Background="#00FFFFFF"
								BorderThickness="0"
								Height="32"
								BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}"
								MouseUp="ReadMoreLinkMouseLeftButtonUp">
								<StackPanel
									Margin="12,4,12,4"
									Orientation="Horizontal">
									<Common:CustomPictureBox
										Margin="0,0,12,0"
										Height="24"
										Width="24"
										ImageName="guidance_readarticle" />
									<TextBlock
										TextTrimming="CharacterEllipsis"
										VerticalAlignment="Center"
										FontSize="14"
										ToolTipService.ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}"
										Text="{Binding Path=LocaleModel.[STRING_READ_SUPPORT_ARTICLE], FallbackValue='Read support article'}"
										Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}" />
								</StackPanel>
							</Border>
						</StackPanel>
					</Border>
					<DockPanel
						x:Name="mKeysIconGrid"
						Grid.Row="2"
						LastChildFill="True">
						<Grid
							x:Name="mKeyboardIcon"
							Width="32"
							DockPanel.Dock="Left">
							<Common:CustomPictureBox
								x:Name="mKeyboardIconImage"
								Width="16"
								Height="16"
								ImageName="guidance_controls"
								VerticalAlignment="Center"
								HorizontalAlignment="Center"
								PreviewMouseLeftButtonUp="KeyboardIconPreviewMouseLeftButtonUp" />
							<Grid
								x:Name="mKeyboardIconSeparator"
								VerticalAlignment="Bottom"
								Height="2"
								Background="{Binding Path=ColorModel.[SettingsWindowTabMenuItemUnderline]}" />
						</Grid>
						<Grid
							x:Name="mGamepadIcon"
							Width="32"
							DockPanel.Dock="Left">
							<Common:CustomPictureBox
								x:Name="mGamepadIconImage"
								Width="16"
								Height="16"
								ImageName="guidance_gamepad"
								VerticalAlignment="Center"
								HorizontalAlignment="Center"
								PreviewMouseLeftButtonUp="GamepadIconPreviewMouseLeftButtonUp" />
							<Grid
								x:Name="mGamepadIconSeparator"
								VerticalAlignment="Bottom"
								Height="2"
								Background="{Binding Path=ColorModel.[HorizontalSeparator]}" />
						</Grid>
						<Grid
							DockPanel.Dock="Right">
							<StackPanel
								x:Name="mReadArticlePanel"
								Visibility="Collapsed"
								Orientation="Horizontal">
								<TextBlock
									VerticalAlignment="Center"
									FontSize="12"
									Foreground="{Binding Path=ColorModel.[SettingsWindowForegroundDimColor]}">
									<Hyperlink
										Style="{StaticResource HyperlinkStyle}">
										<TextBlock
											Text="{Binding Path=LocaleModel.[STRING_READ_ARTICLE], FallbackValue='Read article'}"
											MouseLeftButtonDown="ReadMoreLinkMouseLeftButtonUp" />
									</Hyperlink>
								</TextBlock>
								<Common:CustomPictureBox
									Width="12"
									Height="12"
									VerticalAlignment="Center"
									ImageName="external_link"
									Margin="4,0,0,0"
									MouseLeftButtonDown="ReadMoreLinkMouseLeftButtonUp" />
							</StackPanel>
							<Grid
								VerticalAlignment="Bottom"
								Height="1"
								Background="{Binding Path=ColorModel.[HorizontalSeparator]}" />
						</Grid>
						<Grid
							x:Name="separator"
							VerticalAlignment="Bottom"
							Height="1"
							Background="{Binding Path=ColorModel.[HorizontalSeparator]}" />
					</DockPanel>
					<Border
						Name="mGuidanceKeyBorder"
						Grid.Row="3"
						BorderThickness="0"
						BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source='{x:Static Common:BlueStacksUIBinding.Instance}'}">
						<Grid
							x:Name="mGuidanceKeysGrid"
							Row="3">
							<ListBox
								x:Name="mGuidanceListBox"
								Grid.Row="0"
								Grid.Column="0"
								ScrollViewer.VerticalScrollBarVisibility="Auto"
								ItemTemplateSelector="{StaticResource guidanceDataTemplateSelector}"
								Background="#00FFFFFF"
								ItemsSource="{Binding}" />
							<StackPanel
								x:Name="noGameGuidePanel"
								Orientation="Vertical"
								VerticalAlignment="Center"
								Visibility="Collapsed">
								<Common:CustomPictureBox
									ImageName="no_guidance"
									HorizontalAlignment="Center"
									Width="55"
									Margin="0,0,0,10" />
								<TextBlock
									FontSize="16"
									TextTrimming="CharacterEllipsis"
									Padding="8"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Text="{Binding Path=LocaleModel.[STRING_NO_GUIDE], FallbackValue='No game guide'}"
									Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}" />
								<TextBlock
									FontSize="14"
									TextWrapping="Wrap"
									Margin="10"
									TextAlignment="Center"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Text="{Binding Path=LocaleModel.[STRING_USE_OVERLAY_SCHEME_GUIDE], FallbackValue='Use overlay controls for assistance or switch to a different scheme to view guidance.'}"
									Foreground="{Binding Path=ColorModel.[SettingsWindowForegroundDimColor]}" />
							</StackPanel>
						</Grid>
					</Border>
					<StackPanel
						Grid.Row="4">
						<Grid
							VerticalAlignment="Bottom"
							Height="1"
							Background="{Binding Path=ColorModel.[HorizontalSeparator]}" />
						<DockPanel
							x:Name="mViewDock"
							Margin="0,7.5,0,0">
							<Common:CustomButton
								x:Name="mEditBtn"
								ButtonColor="Background"
								HorizontalAlignment="Right"
								Height="24"
								FontSize="12"
								IsForceTooltipRequired="True"
								DockPanel.Dock="Right"
								Content="{Binding Path=LocaleModel.[STRING_EDIT_KEYS], FallbackValue=Edit}"
								Click="EditBtn_Click" />
							<Common:CustomButton
								x:Name="mRevertBtn"
								ButtonColor="Background"
								HorizontalAlignment="Right"
								Height="24"
								FontSize="12"
								IsForceTooltipRequired="True"
								Margin="5,0,5,0"
								Content="{Binding Path=LocaleModel.[STRING_RESET], FallbackValue=Reset}"
								ToolTip="{Binding Path=LocaleModel.[STRING_RESET_TO_DEFAULT], FallbackValue='Revert to default'}"
								Click="RevertBtn_Click" />
						</DockPanel>
						<Grid
							x:Name="mEditDock"
							Margin="0,7.5,0,0"
							Visibility="Collapsed">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Width="7.5" />
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Width="7.5" />
								<ColumnDefinition
									Width="*" />
							</Grid.ColumnDefinitions>
							<Common:CustomButton
								x:Name="mDiscardBtn"
								ButtonColor="White"
								HorizontalAlignment="Stretch"
								Height="24"
								FontSize="12"
								IsForceTooltipRequired="True"
								Grid.Column="2"
								Content="{Binding Path=LocaleModel.[STRING_Cancel], FallbackValue=Cancel}"
								ToolTip="{Binding Path=LocaleModel.[STRING_CANCEL_CHANGES], FallbackValue='Cancel changes'}"
								Click="DiscardBtn_Click" />
							<Common:CustomButton
								x:Name="mSaveBtn"
								Grid.Column="4"
								ButtonColor="Blue"
								HorizontalAlignment="Stretch"
								Height="24"
								FontSize="12"
								IsForceTooltipRequired="True"
								Content="{Binding Path=LocaleModel.[STRING_SAVE], FallbackValue=Save}"
								ToolTip="{Binding Path=LocaleModel.[STRING_SAVE_CHANGES], FallbackValue='Save changes'}"
								Click="SaveBtn_Click" />
						</Grid>
					</StackPanel>
				</Grid>
			</Grid>
		</Border>
		<Grid
			x:Name="mOverlayGrid"
			Row="0"
			Visibility="Collapsed">
			<Grid
				Background="{Binding Path=ColorModel.[DimOverlayColor]}">
				<UIElement.Effect>
					<BlurEffect
						Radius="0"
						KernelType="Gaussian" />
				</UIElement.Effect>
			</Grid>
		</Grid>
	</Grid>
</Common:CustomWindow>
